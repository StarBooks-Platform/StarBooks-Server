// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StarBooks.Infrastructure.Books;

#nullable disable

namespace StarBooks.Infrastructure.Migrations
{
    [DbContext(typeof(BookContext))]
    [Migration("20220624130954_InitialCreateBooksTable")]
    partial class InitialCreateBooksTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("StarBooks.Domain.Books.AuthorModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("authors");
                });

            modelBuilder.Entity("StarBooks.Domain.Books.BookModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AuthorModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AuthorModelId");

                    b.ToTable("books");
                });

            modelBuilder.Entity("StarBooks.Domain.Books.CategoryModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("StarBooks.Domain.Books.IndustryIdentifierModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("identifiers");
                });

            modelBuilder.Entity("StarBooks.Domain.Books.BookModel", b =>
                {
                    b.HasOne("StarBooks.Domain.Books.AuthorModel", null)
                        .WithMany("Books")
                        .HasForeignKey("AuthorModelId");

                    b.OwnsOne("StarBooks.Domain.Books.AccessInfo", "AccessInfo", b1 =>
                        {
                            b1.Property<Guid>("BookModelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool>("Embeddable")
                                .HasColumnType("bit");

                            b1.Property<bool>("PublicDomain")
                                .HasColumnType("bit");

                            b1.Property<bool>("QuoteSharingAllowed")
                                .HasColumnType("bit");

                            b1.Property<string>("TextToSpeechPermission")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Viewability")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("WebReaderLink")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BookModelId");

                            b1.ToTable("books");

                            b1.WithOwner()
                                .HasForeignKey("BookModelId");

                            b1.OwnsOne("StarBooks.Domain.Books.EResource", "Epub", b2 =>
                                {
                                    b2.Property<Guid>("AccessInfoBookModelId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("AcsTokenLink")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<bool>("IsAvailable")
                                        .HasColumnType("bit");

                                    b2.HasKey("AccessInfoBookModelId");

                                    b2.ToTable("books");

                                    b2.WithOwner()
                                        .HasForeignKey("AccessInfoBookModelId");
                                });

                            b1.OwnsOne("StarBooks.Domain.Books.EResource", "Pdf", b2 =>
                                {
                                    b2.Property<Guid>("AccessInfoBookModelId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("AcsTokenLink")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<bool>("IsAvailable")
                                        .HasColumnType("bit");

                                    b2.HasKey("AccessInfoBookModelId");

                                    b2.ToTable("books");

                                    b2.WithOwner()
                                        .HasForeignKey("AccessInfoBookModelId");
                                });

                            b1.Navigation("Epub")
                                .IsRequired();

                            b1.Navigation("Pdf")
                                .IsRequired();
                        });

                    b.OwnsOne("StarBooks.Domain.Books.SaleInfo", "SaleInfo", b1 =>
                        {
                            b1.Property<Guid>("BookModelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool>("IsEbook")
                                .HasColumnType("bit");

                            b1.HasKey("BookModelId");

                            b1.ToTable("books");

                            b1.WithOwner()
                                .HasForeignKey("BookModelId");

                            b1.OwnsOne("StarBooks.Domain.Books.Price", "ListPrice", b2 =>
                                {
                                    b2.Property<Guid>("SaleInfoBookModelId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.HasKey("SaleInfoBookModelId");

                                    b2.ToTable("books");

                                    b2.WithOwner()
                                        .HasForeignKey("SaleInfoBookModelId");
                                });

                            b1.OwnsOne("StarBooks.Domain.Books.Price", "RetailPrice", b2 =>
                                {
                                    b2.Property<Guid>("SaleInfoBookModelId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.HasKey("SaleInfoBookModelId");

                                    b2.ToTable("books");

                                    b2.WithOwner()
                                        .HasForeignKey("SaleInfoBookModelId");
                                });

                            b1.Navigation("ListPrice")
                                .IsRequired();

                            b1.Navigation("RetailPrice")
                                .IsRequired();
                        });

                    b.OwnsOne("StarBooks.Domain.Books.SearchInfo", "SearchInfo", b1 =>
                        {
                            b1.Property<Guid>("BookModelId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("BookModelId");

                            b1.ToTable("books");

                            b1.WithOwner()
                                .HasForeignKey("BookModelId");
                        });

                    b.OwnsOne("StarBooks.Domain.Books.VolumeInfo", "VolumeInfo", b1 =>
                        {
                            b1.Property<Guid>("BookModelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("AverageRating")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("InfoLink")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Language")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("PageCount")
                                .HasColumnType("int");

                            b1.Property<string>("PreviewLink")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PrintType")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PublishedDate")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Publisher")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("RatingsCount")
                                .HasColumnType("int");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BookModelId");

                            b1.ToTable("books");

                            b1.WithOwner()
                                .HasForeignKey("BookModelId");

                            b1.OwnsOne("StarBooks.Domain.Books.ImageLinks", "ImageLinks", b2 =>
                                {
                                    b2.Property<Guid>("VolumeInfoBookModelId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("ThumbnailUrl")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("VolumeInfoBookModelId");

                                    b2.ToTable("books");

                                    b2.WithOwner()
                                        .HasForeignKey("VolumeInfoBookModelId");
                                });

                            b1.Navigation("ImageLinks")
                                .IsRequired();
                        });

                    b.Navigation("AccessInfo")
                        .IsRequired();

                    b.Navigation("SaleInfo")
                        .IsRequired();

                    b.Navigation("SearchInfo")
                        .IsRequired();

                    b.Navigation("VolumeInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("StarBooks.Domain.Books.AuthorModel", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
